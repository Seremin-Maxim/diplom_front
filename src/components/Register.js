import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import axios from 'axios';
import { API } from '../config/api';
import './Register.css';
import './AuthBackground.css';

function Register() {
    const [formData, setFormData] = useState({
        email: '',
        password: '',
        firstName: '',
        lastName: '',
        role: 'USER' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–æ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
    });
    const [error, setError] = useState(null);
    const [loading, setLoading] = useState(false);
    const [activeRole, setActiveRole] = useState('USER');
    const navigate = useNavigate();

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        });
    };

    const handleRoleChange = (role) => {
        setActiveRole(role);
        setFormData({
            ...formData,
            role: role
        });
    };

    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–æ–ª–∏
    useEffect(() => {
        const roleCards = document.querySelectorAll('.role-card');
        roleCards.forEach(card => {
            card.classList.remove('active');
            if (card.getAttribute('data-role') === activeRole) {
                card.classList.add('active');
            }
        });
    }, [activeRole]);

    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError(null);
        
        try {
            const response = await axios.post(
                API.AUTH.SIGNUP,
                formData
            );
            console.log('Registration successful:', response.data);
            // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            navigate('/login', { state: { message: 'Registration successful! Please login.' } });
        } catch (error) {
            console.error('Registration error:', error);
            setError(error.response?.data?.error || 'Registration failed. Please try again.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <>
            <div className="auth-background">
                <div className="education-icons">
                    <div className="icon icon-book">üìö</div>
                    <div className="icon icon-pencil">‚úèÔ∏è</div>
                    <div className="icon icon-graduation">üéì</div>
                    <div className="icon icon-lightbulb">üí°</div>
                    <div className="icon icon-computer">üíª</div>
                </div>
            </div>
            <div className="register-container">
                <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
                {error && <div className="error-message">{error}</div>}
            
            <div className="role-selector">
                <div 
                    className={`role-card ${activeRole === 'USER' ? 'active' : ''}`}
                    data-role="USER"
                    onClick={() => handleRoleChange('USER')}
                >
                    <div className="role-icon student-icon">üë®‚Äçüéì</div>
                    <h3>–°—Ç—É–¥–µ–Ω—Ç</h3>
                    <p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤</p>
                </div>
                <div 
                    className={`role-card ${activeRole === 'TEACHER' ? 'active' : ''}`}
                    data-role="TEACHER"
                    onClick={() => handleRoleChange('TEACHER')}
                >
                    <div className="role-icon teacher-icon">üë®‚Äçüè´</div>
                    <h3>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</h3>
                    <p>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—Å–æ–≤</p>
                </div>
            </div>
            
            <form onSubmit={handleSubmit}>
                <div className="form-group">
                    <label htmlFor="email">Email</label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        required
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
                    <input
                        type="password"
                        id="password"
                        name="password"
                        value={formData.password}
                        onChange={handleChange}
                        required
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="firstName">–ò–º—è</label>
                    <input
                        type="text"
                        id="firstName"
                        name="firstName"
                        value={formData.firstName}
                        onChange={handleChange}
                        required
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                    />
                </div>
                <div className="form-group">
                    <label htmlFor="lastName">–§–∞–º–∏–ª–∏—è</label>
                    <input
                        type="text"
                        id="lastName"
                        name="lastName"
                        value={formData.lastName}
                        onChange={handleChange}
                        required
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é"
                    />
                </div>
                
                <div className="selected-role-info">
                    <p>–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–æ–ª—å: <strong>{activeRole === 'USER' ? '–°—Ç—É–¥–µ–Ω—Ç' : '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'}</strong></p>
                </div>
                <button type="submit" className="register-button" disabled={loading}>
                    {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                </button>
            </form>
            <p className="login-link">
                –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <Link to="/login">–í–æ–π—Ç–∏</Link>
            </p>
        </div>
        </>
    );
}

export default Register;