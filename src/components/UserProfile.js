import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';
import { API } from '../config/api';
import TeacherCourses from './TeacherCourses';
import './Profile.css';
import Navbar from './Navbar';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞–∑–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—É–¥–µ–Ω—Ç/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)
 */
function UserProfile() {
  const [userData, setUserData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [activeTab, setActiveTab] = useState('profile');
  const [showCreateForm, setShowCreateForm] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUserData = async () => {
      const token = localStorage.getItem('token');
      if (!token) {
        navigate('/login');
        return;
      }
      try {
        setLoading(true);
        const response = await axios.get(API.USERS.PROFILE, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        setUserData(response.data);
        setLoading(false);
      } catch (error) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        setLoading(false);
        if (error.response && error.response.status === 401) {
          localStorage.removeItem('token');
          navigate('/login');
        }
      }
    };
    fetchUserData();
  }, [navigate]);

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    navigate('/login');
  };

  const handleTabChange = (tab) => {
    setActiveTab(tab);
    setShowCreateForm(false);
  };

  if (loading) {
    return (
      <>
        <Navbar />
        <div className="profile-container">
          <div className="loading-spinner">
            <div className="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è...</p>
          </div>
        </div>
      </>
    );
  }

  if (error) {
    return (
      <>
        <Navbar />
        <div className="profile-container">
          <div className="error-message">
            <p>{error}</p>
            <button onClick={() => navigate('/login')} className="primary-button">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            </button>
          </div>
        </div>
      </>
    );
  }

  // –°—Ç—É–¥–µ–Ω—Ç
  if (userData && userData.role === 'USER') {
    return (
      <>
        <Navbar />
        <div className="profile-container">
          <div className="profile-card profile-main-card">
            <div className="profile-main-info">
              <div className="profile-avatar">
                <span className="avatar-text">{userData.firstName.charAt(0)}{userData.lastName.charAt(0)}</span>
              </div>
              <div>
                <div className="profile-main-title">–ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞</div>
                <div className="profile-main-name">{userData.firstName} {userData.lastName}</div>
                <div className="profile-main-role">–°—Ç—É–¥–µ–Ω—Ç</div>
                <div className="profile-main-email">{userData.email}</div>
              </div>
            </div>
            <div className="profile-info">
              <div className="info-group">
                <label>–ò–º—è:</label>
                <p>{userData.firstName}</p>
              </div>
              <div className="info-group">
                <label>–§–∞–º–∏–ª–∏—è:</label>
                <p>{userData.lastName}</p>
              </div>
              <div className="info-group">
                <label>Email:</label>
                <p>{userData.email}</p>
              </div>
              <div className="info-group">
                <label>–†–æ–ª—å:</label>
                <p>–°—Ç—É–¥–µ–Ω—Ç</p>
              </div>
            </div>
            <div className="student-stats">
              <div className="stat-card">
                <div className="stat-icon">üìö</div>
                <div className="stat-info">
                  <h3>–ö—É—Ä—Å–æ–≤ –∑–∞–ø–∏—Å–∞–Ω–æ</h3>
                  <p className="stat-value">0</p>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üèÜ</div>
                <div className="stat-info">
                  <h3>–ö—É—Ä—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</h3>
                  <p className="stat-value">0</p>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">‚≠ê</div>
                <div className="stat-info">
                  <h3>–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞</h3>
                  <p className="stat-value">0.0</p>
                </div>
              </div>
            </div>
            <button onClick={handleLogout} className="logout-button">
              –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
            </button>
          </div>
        </div>
      </>
    );
  }

  // –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
  if (userData && (userData.role === 'TEACHER' || userData.role === 'ROLE_TEACHER')) {
    return (
      <>
        <Navbar />
        <div className="profile-container">
          <div className="profile-card profile-main-card">
            <div className="profile-main-info">
              <div className="profile-avatar teacher-avatar">
                <span className="avatar-text">{userData.firstName.charAt(0)}{userData.lastName.charAt(0)}</span>
              </div>
              <div>
                <div className="profile-main-title">–ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</div>
                <div className="profile-main-name">{userData.firstName} {userData.lastName}</div>
                <div className="profile-main-role">–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</div>
                <div className="profile-main-email">{userData.email}</div>
              </div>
            </div>
            <div className="tabs-container">
              <div className="tabs">
                <button 
                  className={`tab-button ${activeTab === 'profile' ? 'active' : ''}`}
                  onClick={() => handleTabChange('profile')}
                >
                  –ü—Ä–æ—Ñ–∏–ª—å
                </button>
                <button 
                  className={`tab-button ${activeTab === 'courses' ? 'active' : ''}`}
                  onClick={() => handleTabChange('courses')}
                >
                  –ú–æ–∏ –∫—É—Ä—Å—ã
                </button>
              </div>
            </div>
            {activeTab === 'profile' ? (
              <>
                <div className="profile-info">
                  <div className="info-group">
                    <label>–ò–º—è:</label>
                    <p>{userData.firstName}</p>
                  </div>
                  <div className="info-group">
                    <label>–§–∞–º–∏–ª–∏—è:</label>
                    <p>{userData.lastName}</p>
                  </div>
                  <div className="info-group">
                    <label>Email:</label>
                    <p>{userData.email}</p>
                  </div>
                  <div className="info-group">
                    <label>–†–æ–ª—å:</label>
                    <p>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</p>
                  </div>
                </div>
                <div className="teacher-stats">
                  <div className="stat-card">
                    <div className="stat-icon">üìù</div>
                    <div className="stat-info">
                      <h3>–°–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤</h3>
                      <p className="stat-value">0</p>
                    </div>
                  </div>
                  <div className="stat-card">
                    <div className="stat-icon">üë®‚Äçüéì</div>
                    <div className="stat-info">
                      <h3>–°—Ç—É–¥–µ–Ω—Ç–æ–≤</h3>
                      <p className="stat-value">0</p>
                    </div>
                  </div>
                  <div className="stat-card">
                    <div className="stat-icon">‚≠ê</div>
                    <div className="stat-info">
                      <h3>–†–µ–π—Ç–∏–Ω–≥</h3>
                      <p className="stat-value">0.0</p>
                    </div>
                  </div>
                </div>
                <button onClick={handleLogout} className="logout-button">
                  –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
                </button>
              </>
            ) : (
              <div className="courses-container">
                <TeacherCourses userData={userData} />
              </div>
            )}
          </div>
        </div>
      </>
    );
  }

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –∏–ª–∏ —Ä–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
  return (
    <>
      <Navbar />
      <div className="profile-container">
        <div className="error-message">
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å–Ω–æ–≤–∞.</p>
          <button onClick={() => navigate('/login')} className="primary-button">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
          </button>
        </div>
      </div>
    </>
  );
}

export default UserProfile;